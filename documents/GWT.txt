///////////////////////////////////////////////////////////////////////////////
// Original commands from the game (alphabetical)

GO Scenario #1: No direction specified
   GIVEN : "go" is entered 
    WHEN : 
    THEN : appropriate message is displayed

GO Scenario #2: No exit exists
   GIVEN : "go direction" is entered 
    WHEN : there is no exit in the given direction
    THEN : appropriate message is displayed (no door)

GO Scenario #3: Exit exists
   GIVEN : "go direction" is entered
    WHEN : there is an exit in the given direction
    THEN : player's current room is changed to the room in the given direction
     and : the current room's points are added to the player's score
     and : player's current location is displayed

HELP Scenario #1:
   GIVEN : "help" is entered
    WHEN : 
    THEN : available commands are displayed

SCORE Scenario #1:
   GIVEN : "score" is entered
    WHEN : 
    THEN : player's current score is displayed

TURNS Scenario #1:
   GIVEN : "turns" is entered
    WHEN : 
    THEN : current number of turns is displayed to the screen

QUIT Scenario #1:
   GIVEN : "quit" is entered
    WHEN : 
    THEN : appropriate message is displayed (thanks for playing)
     and : program quits



///////////////////////////////////////////////////////////////////////////////
// Commands added in Stage 2 (alphabetical)

BACK Scenario #1: no previous room
   GIVEN : "back" is entered
    WHEN : there is no previous room
    THEN : appropriate message is displayed (cannot go back)

BACK Scenario #2: there is a previous room
   GIVEN : "back" is entered
    WHEN : there is a previous room
    THEN : player's current location is changed to the previous location
     and : player's current location is displayed 

LOOK Scenario #1:
   GIVEN : "look" is entered
    WHEN : 
    THEN : player's current location is displayed

STATUS Scenario #1:
   GIVEN : "status" is entered
    WHEN : 
    THEN : current number of turns is displayed 
     and : player's current score is displayed
     and : player's current location is displayed




///////////////////////////////////////////////////////////////////////////////
// Commands added in Stage 3 (alphabetical)

DROP Scenario #1: No item specified
   GIVEN : "drop" is entered
    WHEN : 
    THEN : appropriate message is displayed (which item?)

DROP Scenario #2: Player does not have the specified item
   GIVEN : "drop item" is entered
    WHEN : player does not have the specified item
    THEN : appropriate message is displayed (you don't have it)

DROP Scenario #3: Player has the specified item
   GIVEN : "drop item" is entered
    WHEN : player has the specified item
    THEN : "item" is removed from the player's inventory
     and : "item" is added to the current room
     and : appropriate message is displayed (you dropped the item)



EXAMINE Scenario #1: No item specified
   GIVEN : "examine" is entered
    WHEN : 
    THEN : appropriate message is displayed (which item?)

EXAMINE Scenario #2: Specified item does not exist
   GIVEN : "examine item" is entered
    WHEN : specified item is not in the room
     and : specified item is not in player's inventory
    THEN : appropriate message is displayed (no such item)

EXAMINE Scenario #3: Specified item does exist
   GIVEN : "examine item" is entered
    WHEN : specified item is in the room or in the player's inventory
    THEN : complete description of the item is displayed including the item's name, description and (optionally) the weight.



INVENTORY Scenario #1:
   GIVEN : "inventory" is entered
    WHEN : 
    THEN : a list of the items in the players inventory is displayed



TAKE Scenario #1: no item specified
   GIVEN : "take" is entered
    WHEN : 
    THEN : appropriate message is displayed (take what?)

TAKE Scenario #2: specified item does not exist
   GIVEN : "take item" is entered
    WHEN : specified item is not in the current room
    THEN : appropriate message is displayed (no such item)
    
TAKE Scenario #3: specified item is too heavy to lift
   GIVEN : "take item" is entered
    WHEN : specified item is in the current room
     and : specified item by itself exceeds maximum carrying weight
    THEN : appropriate message is displayed (too heavy to lift)

TAKE Scenario #4: specified item makes inventory too heavy
   GIVEN : "take item" is entered
    WHEN : specified item is in the current room
     and : adding specified item to inventory weight exceeds maximum carrying weight
    THEN : appropriate message is displayed (carrying too much)

TAKE Scenario #5: specified item is taken
   GIVEN : "take item" is entered
    WHEN : specified item is in the current room
     and : adding specified item to inventory weight does not exceed maximum carrying weight
    THEN : item is removed from the current room
     and : item is added to the player's inventory
     and : appropriate message is displayed (you took the item)




///////////////////////////////////////////////////////////////////////////////
// Commands added in Stage 4 (alphabetical)

GO Scenario #4: Door is locked
   GIVEN : "go direction" is entered
    WHEN : there is an exit in the given direction
     and : that exit is locked
    THEN : appropriate message is displayed (door is locked)



LOCK Scenario #1: No direction specified
   GIVEN : "lock" is entered
    WHEN : 
    THEN : appropriate message is displayed (lock what?)

LOCK Scenario #2: No Door
   GIVEN : "lock direction" is entered
    WHEN : there is no door in that direction
    THEN : appropriate message is displayed (no door)

LOCK Scenario #3: Door is locked
   GIVEN : "lock direction" is entered
    WHEN : door in "direction" is locked
    THEN : appropriate message is displayed (door is already locked)

LOCK Scenario #4: Door cannot be locked
   GIVEN : "lock direction" is entered
    WHEN : door in "direction" has no associated key
    THEN : appropriate message is displayed (door cannot be locked)

LOCK Scenario #5: Door can be locked
   GIVEN : "lock direction" is entered
    WHEN : door in "direction" is unlocked
     and : door in "direction" can be locked
    THEN : user is prompted for key

LOCK Scenario #6: Player does not have the key
   GIVEN : "lock direction" had been entered
     and : user has been prompted for specific key
    WHEN : player does not have specific key in inventory
    THEN : appropriate message is displayed (you do not have it)

LOCK Scenario #7: Incorrect key specified
   GIVEN : "lock direction" had been entered
     and : user has been prompted for specific key
    WHEN : player's inventory has the specific key
     and : specified key is not the correct key
    THEN : appropriate message is displayed (wrong key)
 
LOCK Scenario #8: Correct key specified
   GIVEN : "lock direction" had been entered
     and : user has been prompted for specific key
    WHEN : player's inventory has the specific key
     and : specified key is the correct key
    THEN : door in "direction" is locked
     and : appropriate message is displayed (you locked it)
 




PACK Scenario #1: No item specified
   GIVEN : "pack" is entered
    WHEN : 
    THEN : appropriate message is displayed (pack what?)

PACK Scenario #2: Item is not available
   GIVEN : "pack item" is entered
    WHEN : item is NOT in the current room
     and : item is NOT in the players inventory
    THEN : appropriate message is displayed (you don't have it)

PACK Scenario #3: Item is too heavy*
   GIVEN : "pack item" is entered
    WHEN : item is in the current room
     and : item is heavier than player's carrying capacity
    THEN : appropriate message is displayed (too heavy)

PACK Scenario #4: Item is available
   GIVEN : "pack item" is entered
    WHEN : item is in the current room
      or : item is in the player's inventory
     and : there are no weight problems
    THEN : user is prompted for the container to put it in

PACK Scenario #5: Container is not available
   GIVEN : "pack item" had been entered
     and : user has been prompted for the container
    WHEN : container is NOT in the current room
     and : container is NOT in the player's inventory
    THEN : appropriate message is displayed (you don't see the container)

PACK Scenario #6: Container is NOT a container 
   GIVEN : "pack item" had been entered
     and : user has been prompted for the container
    WHEN : container is in the current room
      or : container is in the player's inventory
     and : container is not really a container
    THEN : appropriate message is displayed (that's not a container)

PACK Scenario #7: Container is a container, but item too heavy*
   GIVEN : "pack item" had been entered
     and : user has been prompted for the container
    WHEN : item is in the current room
     and : container is in the player's inventory
     and : item would put player over their inventory weight limit
    THEN : appropriate message is displayed (carrying too much)

PACK Scenario #8: Packing is possible
   GIVEN : "pack item" had been entered
     and : user has been prompted for the container
    WHEN : container is in the current room
      or : container is in the player's inventory
     and : container is really a container
     and : there are no weight problems
    THEN : item is removed from the current room
      or : item is removed from the player's inventory
     and : item is added to the container
     and : appropriate message is displayed (you packed it)





UNLOCK Scenario #1: No direction specified
   GIVEN : "unlock" is entered
    WHEN : 
    THEN : appropriate message is displayed (unlock what?)

UNLOCK Scenario #2: No door in that direction
   GIVEN : "unlock direction" is entered
    WHEN : there is no door in the "direction"
    THEN : appropriate message is displayed (there is no door)

UNLOCK Scenario #3: Direction is specified and is not locked
   GIVEN : "unlock direction" is entered
    WHEN : there is a door in the "direction"
     and : door in "direction" is NOT locked
    THEN : appropriate message is displayed (door is not locked)

UNLOCK Scenario #4: Direction is specified and is locked
   GIVEN : "unlock direction" is entered
    WHEN : there is a door in the "direction"
     and : door in "direction" is locked
    THEN : user is prompted for key

UNLOCK Scenario #5: Player missing specified key
   GIVEN : "unlock direction" had been entered
     and : user has been prompted for specific key
    WHEN : player's inventory does NOT have the specific key
    THEN : appropriate message is displayed (you don't have it)

UNLOCK Scenario #6: Incorrect key
   GIVEN : "unlock direction" had been entered
     and : user has been prompted for specific key
    WHEN : player's inventory has the specific key
     and : specified key is incorrect item
    THEN : appropriate message is displayed (that doesn't fit)

UNLOCK Scenario #7: Correct key
   GIVEN : "unlock direction" had been entered
     and : user has been prompted for specific key
    WHEN : player's inventory has the specific key
     and : specified key is the correct object
    THEN : door in "direction" is unlocked
     and : appropriate message is displayed (you unlocked it)
 




UNPACK Scenario #1: No container specified
   GIVEN : "unpack" is entered
    WHEN : 
    THEN : appropriate message is displayed (unpack what?)

UNPACK Scenario #2: Specified container is not in the current room
   GIVEN : "unpack container" is entered
    WHEN : specified container is NOT in the current room
     and : specified container is NOT in the players inventory
    THEN : appropriate message is displayed (you don't see it)

UNPACK Scenario #3: Specified item is not a container
   GIVEN : "unpack container" is entered
    WHEN : specified container is in the current room
      or : specified container is in the player's inventory
     and : specified container is NOT a container
    THEN : appropriate message is displayed (that's not a container)

UNPACK Scenario #4: Container is OK
   GIVEN : "unpack container" is entered
    WHEN : specified container is in the current room
      or : specified container is in the player's inventory
     and : specified container is a container
    THEN : user is prompted for an item to unpack

UNPACK Scenario #5: Item is NOT in container
   GIVEN : "unpack container" had been entered
     and : user has been prompted for the item to unpack
    WHEN : item to unpack is NOT in the container
    THEN : appropriate message is displayed (you don't find it)

UNPACK Scenario #6: Item is in container but too heavy*
   GIVEN : "unpack container" had been entered
     and : user has been prompted for the item to unpack
    WHEN : item to unpack is in the container
     and : container was in the current room
     and : item would make the player exceed his weight limit
    THEN : appropriate message is displayed (you are already carrying too much)

UNPACK Scenario #7: Item can be unpacked
   GIVEN : "unpack container" had been entered
     and : user has been prompted for the item to unpack
    WHEN : item to unpack is in the container
     and : there is no weight problem
    THEN : item to unpack is removed from the container
     and : item to unpack is added to the player's inventory
     and : appropriate message is displayed (you unpack it)

///////////////////////////////////////////////////////////////////////////////

MAKE Scenario #1: No item is specified
	GIVEN : "make" is entered
	 WHEN : 
	 THEN : appropriate message is displayed (make what?)
	
MAKE Scenario #3: Specified item is not makeable
	GIVEN : "make item" is entered
	 WHEN : item is not makeable
	 THEN : appropriate message is display (that isn't something you can make)
	 
MAKE Scenario #2: Player is not in proper room
	GIVEN : "make item" is entered
	 WHEN : item is makeable
	  and : user is not in proper room
	 THEN : appropriate message is displayed (you can't make potions here)
	 
MAKE Scenario #4: Player does not have proper ingredients
	GIVEN : "make item" is entered
	 WHEN : item is makeable
	  and : user does not have proper ingredients
	  and : user is in proper room
	 THEN : appropriate message is displayed (you don't have all the ingredients)
	 
MAKE Scenario #5: Cauldron is not empty
	GIVEN : "make item" is entered
	 WHEN : item is makeable
	  and : user has proper ingredients
	  and : user is in proper room
	  and : cauldron is not empty
	 Then : appropriate message is displayed (the cauldron is not empty)
	 
MAKE Scenario #6: Specified item can be made
	GIVEN : "make item" is entered
	 WHEN : item is makeable
	  and : user has proper ingredients
	  and : user is in proper room
	  and : cauldron is empty
	 Then : ingredients are removed from inventory
	   or : ingredients are removed from room
	  and : potion is added to cauldron
	  and : appropriate message is displayed (you made it)
	  
	  
	  
	  
EMPTY Scenario #1: Item is not specified
	GIVEN : "empty" is entered
	 WHEN : 
	 THEN : appropriate message is displayed (empty what?)
	 
EMPTY Scenario #2: Specified item is not available
	GIVEN : "empty item" is entered
	 WHEN : item is not in room
	  and : item is not in inventory
	 THEN : appropriate message is diplayed (can't find it)
	 
EMPTY Scenario #3: Specified item is not emptiable 
	GIVEN : "empty item" is entered
	 WHEN : item is in room
	   or : item is in inventory
	  and : item is not emptiable
	 THEN : appropriate message is displayed (you can't empty that)
	 
EMPTY Scenario #4: Specified item is already empty
	GIVEN : "empty item" is entered
	 WHEN : item is in room
	   or : item is in inventory
	  and : item is aleady empty
	  and : item is emptiable
	 THEN : appropriate message is displayed (item is already empty)
	 
EMPTY Scenario #5: Specified item can be emptied
	GIVEN : "empty item" is entered
	 WHEN : item is in room
	   or : item is in inventory
	  and : item is not aleady empty
	  and : item is emptiable
	 THEN : item contained inside specified item is removed
	  and : appropriate message is displayed (you emptied it)




POUR Scenario #1: Item is not specified
	GIVEN : "pour" is entered
	 WHEN : 
	 THEN : appropriate message is displayed (pour what?)
	 
POUR Scenario #2: Specified item is not available
	GIVEN : "pour item" is entered
	 WHEN : item is not in a container within the room
	  and : item is not in a container with the inventory
	 THEN : appropriate message is diplayed (can't find it)
	 
POUR Scenario #3: Specified item is not pourable 
	GIVEN : "pour item" is entered
	 WHEN : item is in a container within the room
	   or : item is in a container within the inventory
	  and : item is not pourable
	 THEN : appropriate message is displayed (you can't pour that)
	 
POUR Scenario #4: Specified item is pourable
	GIVEN : "pour item" is entered
	 WHEN : item is in a container within the room
	   or : item is in a container within the inventory
	  and : item is pourable
	 THEN : user is prompted for second item to pour into
	 
POUR Scenario #5: Second item is not available
	GIVEN : "pour item" has been entered
	  and : user has been prompted for second item to pour into
	 WHEN : second item is not in inventory
	  and : second item is not in room
	 THEN : appropriate message is displayed (can't find item)
	 
POUR Scenario #6:  Second item is not able to be poured into
	GIVEN : "pour item" has been entered
	  and : user has been prompted for second item to pour into
	 WHEN : second item is in inventory
	   or : second item is in room
	  and : second item is not able to be poured into
	 THEN : appropriate message is displayed (you can't pour into that)
	 
POUR Scenario #7: Second item is not empty
	GIVEN : "pour item" has been entered
	  and : user has been prompted for second item to pour into
	 WHEN : second item is in inventory
	   or : second item is in room
	  and : second item is able to be poured into
	  and : second item is not emppty
	 THEN : appropriate message is displayed (there's already something in it)
	
POUR Scenario #8:  Second item is able to be poured into
	GIVEN : "pour item" has been entered
	  and : user has been prompted for second item to pour into
	 WHEN : second item is in inventory
	   or : second item is in room
	  and : second item is able to be poured into
	  and : second item is empty
	 THEN : item is added to second item
	  and : item is removed from source
	  and : appropriate message is displayed (you poured it) 
	 
	 
	 
	 
READ Scenario #1: Item is not specified
	GIVEN : "read" is entered
	 WHEN : 
	 THEN : appropriate message is displayed (read what?)
	 
READ Scenario #2: Specified item is not available
	GIVEN : "read item" is entered
	 WHEN : item is not in inventory
	  and : item is not in room
	 THEN : appropriate message is displayed (can't find item)
	 
READ Scenario #3: Specified item is not readable
	GIVEN : "read item" is entered
	 WHEN : item is in inventory
	   or : item is in room
	  and : item is not readable
	 THEN : appropriate message is displayed (you can't read that)
	 
READ Scenario #4: Specified item can be read
	GIVEN : "read item" is entered
	 WHEN : item is in inventory
	   or : item is in room
	  and : item is readable
	 THEN : contents of item are displayed
	  and : user is prompted for content to read
	 
READ Scenario #5: Content does not exist
	GIVEN : "read item" has been entered
	  and : user has been prompted for content to read
	 WHEN : content does not exist
	 THEN : appropriate message is displayed (page doesn't exist)
	 
READ Scenario #6: Content exists
	GIVEN : "read item" has been entered
	  and : user has been prompted for content to read
	 WHEN : content does exist
	 THEN : appropriate contents of book are displayed
	 
	
	 
	 
	 
USE Scenario #1: Item is not specified
	GIVEN : "use" is entered
	 WHEN : 
	 THEN : appropriate message is displayed (use what?)
	 
USE Scenario #2: Specified item is not available	
	GIVEN : "use item" is entered
	 WHEN : specified item is not in a room container
	  and : specified item is not in an inventory container
	 THEN : appropriate message is displayed (can't find it)
	 
USE Scenario #3: Specified item is not useable
	GIVEN : "use item" is entered
	 WHEN : specified item is in a room container
	   or : specified item is in an inventory container
	  and : specified item is not useable
	 THEN : appropriate message is displayed (can't use it)
	 
USE Scenario #4: Specified item is useable
	GIVEN : "use item" is entered
	 WHEN : specified item is in a room container
	   or : specified item is in an inventory container
	  and : specified item is useable
	 THEN : user is prompted for what to use the item on
	 
USE Scenario #5: Cannot use item on second item
	GIVEN : "use item" has been entered
	  and : user has been prompted for what to use the item on
	 WHEN : item cannot be used on second item
	 THEN : appropriate message is displayed (can't use it on this item)
	 
USE Scenario #6: Can use item on second item
	GIVEN : "use item" has been entered
	  and : user has been prompted for what to use the item on
	 WHEN : item can be used on second item
	 THEN : affects on item on second item are carried out
	  and : appropriate message is displayed (you used it)
	  and : item is removed from its room container
	   or : item is removed from its inventory container
	   
	 
	 
TALK Scenario #1: Character is not specified
	GIVEN : "talk" is entered
	 WHEN :
	 THEN : appropriate message is displayed (talk to who?)
	 
TALK Scenario #2: What is specified is not a character in the room
	GIVEN : "talk word" is entered
	 WHEN : word is not a character in the room
	 THEN : appropriate message is displayed (who?)
	 
TALK Scenario #3: What is specified is a character in the room
	GIVEN : "talk word" is entered
	 WHEN : word is a character in the room
	 THEN : conversation is begun
	 
	 
	 
TRADE Scenario #1: Item is not specified
	GIVEN : "trade" is entered
	 WHEN :
	 THEN : appropriate message is displayed (trade what?)
	 
TRADE Scenario #2: Item is not in player's inventory
	GIVEN : "trade item" is entered
	 WHEN : item is not in player's inventory
	 THEN : appropriate message is displayed (you don't have that to trade)
	 
TRADE Scenario #3: Item is in player's inventory
	GIVEN : "trade item" is entered
	 WHEN : item is in player's inventory
	 THEN : user is prompted for who to trade with 
	 
TRADE Scenario #4: Specified character is not in room
	GIVEN : "trade item" has been entered
	  and : user has been prompted for who to trade with
	 WHEN : specified character is not in room
	 THEN : appropriate message is displayed (who?)
	 
TRADE Scenario #5: Specified character no longer has any items to trade
	GIVEN : "trade item" has been entered
	  and : user has been prompted for who to trade with
	 WHEN : specified character is in room
	  and : specified character does not have any items
	 THEN : appropriate message is displayed (they don't have anything to trade)
	 
TRADE Scenario #5: Specified character no longer has any items to trade
	GIVEN : "trade item" has been entered
	  and : user has been prompted for who to trade with
	 WHEN : specified character is in room
	  and : specified character does not have any items
	 THEN : appropriate message is displayed (they don't have anything to trade)
	 
TRADE Scenario #6: Taking character's item would put player over max weight
	GIVEN : "trade item" has been entered
	  and : user has been prompted for who to trade with
	 WHEN : specified character is in room
	  and : specified character has an item
	  and : adding character's item to your inventory would put you over max weight
	 THEN : appropriate message is displayed (you're carrying too much)
	 
TRADE Scenario #7: Item is not one that the character will trade for
	GIVEN : "trade item" has been entered
	  and : user has been prompted for who to trade with
	 WHEN : specified character is in room
	  and : specified character has an item
	  and : adding character's item to your inventory would not put you over max weight
	  and : item is not one that the character will trade for
	 THEN : appropriate message is displayed (they won't trade)
	 
TRADE Scenario #8: Player is not carrying too much
	GIVEN : "trade item" has been entered
	  and : user has been prompted for who to trade with
	 WHEN : specified character is in room
	  and : specified character has an item
	  and : adding character's item to your inventory would not put you over max weight
	  and : item is one that the character will trade for
	 THEN : item from character's inventory is added to yours
	  and : appropriate message is displayed (you traded)

	   